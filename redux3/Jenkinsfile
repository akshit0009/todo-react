pipeline {
    agent any
   
    stages {
         stage('Install Dependencies') {
            steps {
                script {
                      sh 'npm install bootstrap react-bootstrap'
                      }
                  }
                }
         stage('Build Docker Image') {
            steps {
                script {
                    
                    // Build the Docker image
                    sh 'docker build -t react-app redux3/'
                   }
            }
         }
         stage('Run Docker Container') {
            steps {
                script {
                   
                    def containerName = 'react-app-container'

                    // Check if the container is already running
                    def existingContainer = sh(script: "docker ps -a --filter name=${containerName} --format {{.Names}}", returnStatus: true)

                    if (existingContainer == 0) {
                        // Stop and remove the existing container
                        sh "docker stop ${containerName} || true"
                        sh "docker rm ${containerName} || true"
                    }

                    // Run the Docker container
                    sh "docker run -p 3000:3000 -d --name react-app-container react-app > build.log 2>&1"
                    }
               }
         }
        stage('Push Logs to CloudWatch') {
            steps {
                // Push build logs to CloudWatch Logs
                sh 'aws logs push /jenkins/jobs build.log'
            }
        }
        
    }
}

