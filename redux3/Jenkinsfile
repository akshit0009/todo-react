pipeline {
    agent any

    stages {
        stage('Install Dependencies') {
            steps {
                script {
                    sh 'npm install bootstrap react-bootstrap'
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                script {
                    def dockerImageName = 'react-app'
                    def dockerfilePath = 'Dockerfile'

                    def dockerBuildCommand = "docker build -t ${dockerImageName} . --build-arg BUILD_TIMESTAMP=$$(date +'%Y-%m-%dT%H:%M:%SZ')"

                    sh "${dockerBuildCommand}"
                }
            }
        }

        stage('Run Docker Container') {
            steps {
                script {
                    def containerName = 'react-app-container'
                    def dockerImageName = 'react-app'

                    // Stop and remove the existing container if it's running
                    sh "docker stop ${containerName} || true"
                    sh "docker rm ${containerName} || true"

                    // Run the Docker container
                    sh "docker run -p 3000:3000 -d --name ${containerName} ${dockerImageName} > build.log 2>&1"
                }
            }
        }
        stage('Log Events') {
            steps {
                script {
                    def timestamp = new Date().format('yyyy-MM-dd\'T\'HH:mm:ssZ')
                    def logEvents = """[
                        {
                            "message": "Example log event 1",
                            "timestamp": "${timestamp}"
                        },
                        {
                            "message": "Build started at ${BUILD_ENVIRONMENT_TIMESTAMP}",
                            "timestamp": "${BUILD_TIMESTAMP}"
                        }
                    ]"""

                    def credentialsId = 'my-aws-credentials-id'
                    def region = 'ap-south-1'
                    def logGroupName = 'my-logs-group'
                    def logStreamName = '20240217'

                    def buildTimestamp = env.BUILD_TIMESTAMP

                    sh """
                        aws logs put-log-events --log-group-name ${logGroupName} --log-stream-name ${logStreamName} --log-events file:///dev/stdin <<EOF
                        ${logEvents}
                        EOF
                    """
                    env.AWS_ACCESS_KEY_ID = credentialsId
                    env.AWS_SECRET_ACCESS_KEY = credentialsId + ':my-secret-key'
                }
            }
        }
    }
}